t <- 1
for(t in 1:999) {
# Subset data for the current patch
current_cluster <- filter(landscape_data, clusters==t)
# Calculate current values
R1 <- cr_patch1$Resource # resource timeseries data for patch 1. Done for readability
R1[t+1] = R1[t] + a * R1[t] * (1 - R1[t] / K) - b * R1[t] / (A + R1[t]) * C1[t]
C1 <- cr_patch1$Consumer # consumer timeseries data for patch 1. Done for readability
C1[t+1] = C1[t] + e * ((R1[t] / (A + R1[t])) - (B / (B + A))) * C1[t]
cr_patch1$Resource[t+1] <- R1[t+1]
cr_patch1$Consumer[t+1] <- C1[t+1]
}
for(t in 1:999) {
# Subset data for the current patch
current_cluster <- filter(landscape_data, clusters==t)
# Calculate current values
R1 <- cr_patch1$Resource # resource timeseries data for patch 1. Done for readability
R1[t+1] = R1[t] + a * R1[t] * (1 - R1[t] / K) - b * R1[t] / (A + R1[t]) * C1[t]
C1 <- cr_patch1$Consumer # consumer timeseries data for patch 1. Done for readability
C1[t+1] = C1[t] + e * ((R1[t] / (A + R1[t])) - (B / (B + A))) * C1[t]
cr_patch1$Resource[t+1] <- R1[t+1]
cr_patch1$Consumer[t+1] <- C1[t+1]
}
t <- 1
for(t in 1:999) {
# Subset data for the current patch
current_cluster <- filter(landscape_data, clusters==t)
# Calculate current values
R1 <- cr_patch1$Resource # resource timeseries data for patch 1. Done for readability
C1 <- cr_patch1$Consumer # consumer timeseries data for patch 1. Done for readability
R1[t+1] = R1[t] + a * R1[t] * (1 - R1[t] / K) - b * R1[t] / (A + R1[t]) * C1[t]
C1[t+1] = C1[t] + e * ((R1[t] / (A + R1[t])) - (B / (B + A))) * C1[t]
cr_patch1$Resource[t+1] <- R1[t+1]
cr_patch1$Consumer[t+1] <- C1[t+1]
}
cr_patch1[1:20,]
as.numeric(row.names(cr_patch1))
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1))) +
geom_line() +
geom_point() +
labs(
title = "Population Dynamics",
x = "Timestep",
y = "Population Density",
color = "Population Type"
) +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red")))
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1))) +
geom_line(Resource) +
geom_line(Consumer) +
labs(
title = "Population Dynamics",
x = "Timestep",
y = "Population Density",
color = "Population Type"
) +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red")))
cr_patch1
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1))) +
geom_line(y = Resource) +
geom_line(y = Consumer) +
labs(
title = "Population Dynamics",
x = "Timestep",
y = "Population Density",
color = "Population Type"
) +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red")))
cr_patch1
?geom_line
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1))) +
geom_path(aes(y = Resource)) +
geom_path(aes(y = Consumer)) +
labs(
title = "Population Dynamics",
x = "Timestep",
y = "Population size",
color = "Population Type"
) +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red")))
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource)) +
geom_path(aes(y = Consumer)) +
labs(
title = "Population Dynamics",
x = "Timestep",
y = "Population size",
color = "Population Type"
) +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red"))
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource)) +
geom_path(aes(y = Consumer)) +
labs(
title = "Population Dynamics",
x = "Timestep",
y = "Population size",
color = "Population Type"
) +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red"))
# Parameters (example values; adjust as needed)
{
n_patches = length(unique(na.omit(landscape_data$clusters)))
t <- 1               # Time step
# Rlast <- 10          # Resources in previous time step
# Rnow <- Rlast        # Resources in current time step
# Clast <- 5           # Consumers in previous time step
# Cnow <- Clast        # Consumers in current time step
R0 <- 10
C0 <- 5
a <- 2             # Avoidability of the resource
A <- 50              # Resource half-saturation constant
b <- 0.8             # Consumer consumption ability
B <- 30              # Consumer half-saturation constant
e <- 0.4             # Extinction rate of the consumer
K <- 100             # Carrying capacity
}
cr_patch1 <- data.frame(Resource = numeric(1000), # consumer-resource dynamics timeseries for patch 1
Consumer = numeric(1000))
cr_patch1$Resource[1] = R0
cr_patch1$Consumer[1] = C0
t <- 1
for(t in 1:999) {
# Subset data for the current patch
current_cluster <- filter(landscape_data, clusters==t)
# Calculate current values
R1 <- cr_patch1$Resource # resource timeseries data for patch 1. Done for readability
C1 <- cr_patch1$Consumer # consumer timeseries data for patch 1. Done for readability
R1[t+1] = R1[t] + a * R1[t] * (1 - R1[t] / K) - b * R1[t] / (A + R1[t]) * C1[t]
C1[t+1] = C1[t] + e * ((R1[t] / (A + R1[t])) - (B / (B + A))) * C1[t]
cr_patch1$Resource[t+1] <- R1[t+1]
cr_patch1$Consumer[t+1] <- C1[t+1]
}
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource)) +
geom_path(aes(y = Consumer)) +
labs(
title = "Population Dynamics",
x = "Timestep",
y = "Population size",
color = "Population Type"
) +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red"))
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource)) +
geom_path(aes(y = Consumer)) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red"))
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource)) +
geom_path(aes(y = Consumer)) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red"))
# Parameters (example values; adjust as needed)
{
{
n_patches = length(unique(na.omit(landscape_data$clusters)))
t <- 1               # Time step
# Rlast <- 10          # Resources in previous time step
# Rnow <- Rlast        # Resources in current time step
# Clast <- 5           # Consumers in previous time step
# Cnow <- Clast        # Consumers in current time step
R0 <- 10
C0 <- 5
a <- 5             # Avoidability of the resource
A <- 50              # Resource half-saturation constant
b <- 0.8             # Consumer consumption ability
B <- 30              # Consumer half-saturation constant
e <- 0.4             # Extinction rate of the consumer
K <- 100             # Carrying capacity
}
# Initialize objects for Rnow and Cnow
# cr_values <- data.frame(Rlast = numeric(n_patches),
#                         Rnow = numeric(n_patches),
#                         Clast = numeric(n_patches),
#                         Cnow = numeric(n_patches))
# cr_values$Rlast[1] = Rlast
# cr_values$Clast[1] = Clast
cr_patch1 <- data.frame(Resource = numeric(1000), # consumer-resource dynamics timeseries for patch 1
Consumer = numeric(1000))
cr_patch1$Resource[1] = R0
cr_patch1$Consumer[1] = C0
t <- 1
for(t in 1:999) {
# Subset data for the current patch
current_cluster <- filter(landscape_data, clusters==t)
# Calculate current values
R1 <- cr_patch1$Resource # resource timeseries data for patch 1. Done for readability
C1 <- cr_patch1$Consumer # consumer timeseries data for patch 1. Done for readability
R1[t+1] = R1[t] + a * R1[t] * (1 - R1[t] / K) - b * R1[t] / (A + R1[t]) * C1[t]
C1[t+1] = C1[t] + e * ((R1[t] / (A + R1[t])) - (B / (B + A))) * C1[t]
cr_patch1$Resource[t+1] <- R1[t+1]
cr_patch1$Consumer[t+1] <- C1[t+1]
}
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource)) +
geom_path(aes(y = Consumer)) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red"))
}
# Load the landscape data
landscape_data <- readRDS("data/50x50_scale2a_simple_patches_data.rds")
# Parameters (example values; adjust as needed)
{
{
n_patches = length(unique(na.omit(landscape_data$clusters)))
t <- 1               # Time step
# Rlast <- 10          # Resources in previous time step
# Rnow <- Rlast        # Resources in current time step
# Clast <- 5           # Consumers in previous time step
# Cnow <- Clast        # Consumers in current time step
R0 <- 10
C0 <- 5
a <- 5             # Avoidability of the resource
A <- 50              # Resource half-saturation constant
b <- 0.8             # Consumer consumption ability
B <- 30              # Consumer half-saturation constant
e <- 0.4             # Extinction rate of the consumer
K <- 100             # Carrying capacity
}
# Initialize objects for Rnow and Cnow
# cr_values <- data.frame(Rlast = numeric(n_patches),
#                         Rnow = numeric(n_patches),
#                         Clast = numeric(n_patches),
#                         Cnow = numeric(n_patches))
# cr_values$Rlast[1] = Rlast
# cr_values$Clast[1] = Clast
cr_patch1 <- data.frame(Resource = numeric(1000), # consumer-resource dynamics timeseries for patch 1
Consumer = numeric(1000))
cr_patch1$Resource[1] = R0
cr_patch1$Consumer[1] = C0
t <- 1
for(t in 1:999) {
# Subset data for the current patch
current_cluster <- filter(landscape_data, clusters==t)
# Calculate current values
R1 <- cr_patch1$Resource # resource timeseries data for patch 1. Done for readability
C1 <- cr_patch1$Consumer # consumer timeseries data for patch 1. Done for readability
R1[t+1] = R1[t] + a * R1[t] * (1 - R1[t] / K) - b * R1[t] / (A + R1[t]) * C1[t]
C1[t+1] = C1[t] + e * ((R1[t] / (A + R1[t])) - (B / (B + A))) * C1[t]
cr_patch1$Resource[t+1] <- R1[t+1]
cr_patch1$Consumer[t+1] <- C1[t+1]
}
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource)) +
geom_path(aes(y = Consumer)) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red"))
}
# Parameters (example values; adjust as needed)
{
{
n_patches = length(unique(na.omit(landscape_data$clusters)))
t <- 1               # Time step
# Rlast <- 10          # Resources in previous time step
# Rnow <- Rlast        # Resources in current time step
# Clast <- 5           # Consumers in previous time step
# Cnow <- Clast        # Consumers in current time step
R0 <- 10
C0 <- 5
a <- 2             # Avoidability of the resource
A <- 50              # Resource half-saturation constant
b <- 0.8             # Consumer consumption ability
B <- 30              # Consumer half-saturation constant
e <- 0.4             # Extinction rate of the consumer
K <- 100             # Carrying capacity
}
# Initialize objects for Rnow and Cnow
# cr_values <- data.frame(Rlast = numeric(n_patches),
#                         Rnow = numeric(n_patches),
#                         Clast = numeric(n_patches),
#                         Cnow = numeric(n_patches))
# cr_values$Rlast[1] = Rlast
# cr_values$Clast[1] = Clast
cr_patch1 <- data.frame(Resource = numeric(1000), # consumer-resource dynamics timeseries for patch 1
Consumer = numeric(1000))
cr_patch1$Resource[1] = R0
cr_patch1$Consumer[1] = C0
t <- 1
for(t in 1:999) {
# Subset data for the current patch
current_cluster <- filter(landscape_data, clusters==t)
# Calculate current values
R1 <- cr_patch1$Resource # resource timeseries data for patch 1. Done for readability
C1 <- cr_patch1$Consumer # consumer timeseries data for patch 1. Done for readability
R1[t+1] = R1[t] + a * R1[t] * (1 - R1[t] / K) - b * R1[t] / (A + R1[t]) * C1[t]
C1[t+1] = C1[t] + e * ((R1[t] / (A + R1[t])) - (B / (B + A))) * C1[t]
cr_patch1$Resource[t+1] <- R1[t+1]
cr_patch1$Consumer[t+1] <- C1[t+1]
}
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource)) +
geom_path(aes(y = Consumer)) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red"))
}
# Parameters (example values; adjust as needed)
{
{
n_patches = length(unique(na.omit(landscape_data$clusters)))
t <- 1               # Time step
# Rlast <- 10          # Resources in previous time step
# Rnow <- Rlast        # Resources in current time step
# Clast <- 5           # Consumers in previous time step
# Cnow <- Clast        # Consumers in current time step
R0 <- 10
C0 <- 5
a <- 3             # Avoidability of the resource
A <- 50              # Resource half-saturation constant
b <- 0.8             # Consumer consumption ability
B <- 30              # Consumer half-saturation constant
e <- 0.4             # Extinction rate of the consumer
K <- 100             # Carrying capacity
}
# Initialize objects for Rnow and Cnow
# cr_values <- data.frame(Rlast = numeric(n_patches),
#                         Rnow = numeric(n_patches),
#                         Clast = numeric(n_patches),
#                         Cnow = numeric(n_patches))
# cr_values$Rlast[1] = Rlast
# cr_values$Clast[1] = Clast
cr_patch1 <- data.frame(Resource = numeric(1000), # consumer-resource dynamics timeseries for patch 1
Consumer = numeric(1000))
cr_patch1$Resource[1] = R0
cr_patch1$Consumer[1] = C0
t <- 1
for(t in 1:999) {
# Subset data for the current patch
current_cluster <- filter(landscape_data, clusters==t)
# Calculate current values
R1 <- cr_patch1$Resource # resource timeseries data for patch 1. Done for readability
C1 <- cr_patch1$Consumer # consumer timeseries data for patch 1. Done for readability
R1[t+1] = R1[t] + a * R1[t] * (1 - R1[t] / K) - b * R1[t] / (A + R1[t]) * C1[t]
C1[t+1] = C1[t] + e * ((R1[t] / (A + R1[t])) - (B / (B + A))) * C1[t]
cr_patch1$Resource[t+1] <- R1[t+1]
cr_patch1$Consumer[t+1] <- C1[t+1]
}
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource)) +
geom_path(aes(y = Consumer)) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
scale_color_manual(values = c("Resource" = "blue", "Consumer" = "red"))
}
?geom_path
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "beige")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal()
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "beige")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_void()
?labs
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "beige")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size", legend = "none") +
theme_minimal()
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "beige")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size", legend = none) +
theme_minimal()
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "beige")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal(legend.position="none")
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "beige")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal(legend.position="none")
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "beige")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
theme(legend.position="none")
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "teal")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
theme(legend.position="none")
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "beige")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
theme(legend.position="none")
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "purple")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
theme(legend.position="none")
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "purple")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
theme(legend.position="none")
# Parameters (example values; adjust as needed)
{
{
n_patches = length(unique(na.omit(landscape_data$clusters)))
t <- 1               # Time step
# Rlast <- 10          # Resources in previous time step
# Rnow <- Rlast        # Resources in current time step
# Clast <- 5           # Consumers in previous time step
# Cnow <- Clast        # Consumers in current time step
R0 <- 10
C0 <- 5
a <- 3             # Avoidability of the resource
A <- 50              # Resource half-saturation constant
b <- 1             # Consumer consumption ability
B <- 30              # Consumer half-saturation constant
e <- 0.4             # Extinction rate of the consumer
K <- 100             # Carrying capacity
}
# Initialize objects for Rnow and Cnow
# cr_values <- data.frame(Rlast = numeric(n_patches),
#                         Rnow = numeric(n_patches),
#                         Clast = numeric(n_patches),
#                         Cnow = numeric(n_patches))
# cr_values$Rlast[1] = Rlast
# cr_values$Clast[1] = Clast
cr_patch1 <- data.frame(Resource = numeric(1000), # consumer-resource dynamics timeseries for patch 1
Consumer = numeric(1000))
cr_patch1$Resource[1] = R0
cr_patch1$Consumer[1] = C0
t <- 1
for(t in 1:999) {
# Subset data for the current patch
current_cluster <- filter(landscape_data, clusters==t)
# Calculate current values
R1 <- cr_patch1$Resource # resource timeseries data for patch 1. Done for readability
C1 <- cr_patch1$Consumer # consumer timeseries data for patch 1. Done for readability
R1[t+1] = R1[t] + a * R1[t] * (1 - R1[t] / K) - b * R1[t] / (A + R1[t]) * C1[t]
C1[t+1] = C1[t] + e * ((R1[t] / (A + R1[t])) - (B / (B + A))) * C1[t]
cr_patch1$Resource[t+1] <- R1[t+1]
cr_patch1$Consumer[t+1] <- C1[t+1]
}
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "salmon")) +
geom_path(aes(y = Consumer, colour = "purple")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
theme(legend.position="none")
}
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "purple")) +
geom_path(aes(y = Consumer, colour = "purple")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
theme(legend.position="none")
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "red")) +
geom_path(aes(y = Consumer, colour = "purple")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
theme(legend.position="none")
# Create the plot
ggplot(cr_patch1, aes(x = as.numeric(row.names(cr_patch1)))) +
geom_path(aes(y = Resource, colour = "red")) +
geom_path(aes(y = Consumer, colour = "blue")) +
labs(title = "Patch Dynamics", x = "Timestep", y = "Population size") +
theme_minimal() +
theme(legend.position="none")
