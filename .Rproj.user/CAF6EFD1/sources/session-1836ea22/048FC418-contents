#Each patch at each time step needs n and m walkers. each of those walkers needs to take k steps
#
#
#
#

for(i in 1:n_patches) # Compute random walks for each patch that is occupied
{
  if(patch_occupied[i,1]) # FTC
  {
    num_ftc_walkers <- pmax(floor(cr_patches_r[t,i]/10),1) # Number of walkers is proportional to patch population size
    ftc_walkers <- vector("list", num_ftc_walkers) # Per patch, per step
    
    start_positions_ftc <- landscape_data %>% # FTC starting positions
      filter(resource_occupied, clusters == i) %>%
      sample_n(num_ftc_walkers, replace = TRUE) %>%
      select(x, y)
    
    for (j in 1:num_ftc_walkers) # Simulate each ftc walker
    {
      # starting position for ftc_walker
      current_x <- start_positions_ftc$x[j]
      current_y <- start_positions_ftc$y[j]
      ftc_walker_path <- data.frame(x = current_x, y = current_y)
      
      for (k in 1:10) { # Take the steps
        new_coords <- random_walk_step(current_x, current_y)
        current_x <- new_coords[1]
        current_y <- new_coords[2]
        
        # Constrain the ftc_walker's position within the image bounds
        current_x <- max(min(current_x, max(landscape_data$x)), 1)
        current_y <- max(min(current_y, max(landscape_data$y)), 1)
        
        ftc_walker_path <- rbind(ftc_walker_path, c(current_x, current_y))
      }
      ftc_walkers[[j]] <- ftc_walker_path # Each walker gets a list entry
    }
    # store list of individual walker dataframes in a new list! Per patch
    all_ftc_walks[[i]][[t]] <- ftc_walkers
  }
}

ftc_steplength <- 10
fly_steplength <- 20
# Parameters
n_patches <- 5   # Number of patches
t_final <- 20    # Total number of time steps
walker_interval <- t_final / 5  # Number of time intervals

# Create the main list for all FTC walks
all_ftc_walks <- vector("list", n_patches)

# Populate and name the sublists
for (n in 1:n_patches) {
  # Create a list for the current patch
  patch_walks <- vector("list", t_final/5)
  
  # Name the sublists for walkers at each time
  names(patch_walks) <- paste0("walkers at time ", seq(1, t_final, by = 5))
  
  # Assign the patch walks to the main list
  all_ftc_walks[[n]] <- patch_walks
}

# Name the main list for patches
names(all_ftc_walks) <- paste0("Patch_", 1:n_patches)


rm(list = ls())
